{"ast":null,"code":"var _jsxFileName = \"/home/gsub/Desktop/bitmosys/src/pages/crypto-page/CryptoPage.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport CryptoBlock from \"../../myComponents/crypto-block/CryptoBlock\";\nimport NavBar from \"../../myComponents/navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CryptoPage() {\n  _s();\n\n  const cryptoData = [\"Bitcoin\", \"Gitcoin\", \"Litcoin\", \"LaudaCoin\", \"Bitcoin\", \"Gitcoin\", \"Litcoin\", \"LaudaCoin\", \"Litcoin\", \"LaudaCoin\"];\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState('');\n  const [name, setName] = useState('');\n\n  function getValue(value, name) {\n    setValue(value);\n    setName(name);\n  }\n\n  function handleClose(e) {\n    e.preventDefault();\n    let mydata = {\n      value,\n      name\n    };\n    setData([...data, mydata]);\n    setName('');\n    setValue('');\n  }\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Crypto Coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: cryptoData.map(item => /*#__PURE__*/_jsxDEV(CryptoBlock, {\n          value: getValue,\n          handleClose: handleClose,\n          name: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CryptoPage, \"sumqPwXbF6r8RHQfMl9hw7gog0U=\");\n\n_c = CryptoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoPage\");","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/pages/crypto-page/CryptoPage.js"],"names":["Container","Typography","Box","useEffect","useState","CryptoBlock","NavBar","CryptoPage","cryptoData","data","setData","value","setValue","name","setName","getValue","handleClose","e","preventDefault","mydata","localStorage","setItem","JSON","stringify","map","item"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,eAAtC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEnC,QAAMC,UAAU,GAAG,CACjB,SADiB,EAEjB,SAFiB,EAGjB,SAHiB,EAIjB,WAJiB,EAKjB,SALiB,EAMjB,SANiB,EAOjB,SAPiB,EAQjB,WARiB,EASjB,SATiB,EAUjB,WAViB,CAAnB;AAaA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASW,QAAT,CAAkBJ,KAAlB,EAAyBE,IAAzB,EAA+B;AAC7BD,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AAED,WAASG,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,MAAM,GAAG;AACXR,MAAAA,KADW;AAEXE,MAAAA;AAFW,KAAb;AAIAH,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUU,MAAV,CAAD,CAAP;AACAL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,IAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,GAAD;AAAA,kBAEID,UAAU,CAACgB,GAAX,CAAgBC,IAAD,iBACb,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEV,QAApB;AAA8B,UAAA,WAAW,EAAEC,WAA3C;AAAwD,UAAA,IAAI,EAAES;AAA9D;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD;;GAzDuBlB,U;;KAAAA,U","sourcesContent":["import { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport CryptoBlock from \"../../myComponents/crypto-block/CryptoBlock\";\nimport NavBar from \"../../myComponents/navbar/Navbar\";\n\nexport default function CryptoPage() {\n\n  const cryptoData = [\n    \"Bitcoin\",\n    \"Gitcoin\",\n    \"Litcoin\",\n    \"LaudaCoin\",\n    \"Bitcoin\",\n    \"Gitcoin\",\n    \"Litcoin\",\n    \"LaudaCoin\",\n    \"Litcoin\",\n    \"LaudaCoin\"\n  ];\n\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState('');\n  const [name, setName] = useState('');\n\n  function getValue(value, name) {\n    setValue(value);\n    setName(name);\n  }\n\n  function handleClose(e) {\n    e.preventDefault();\n    let mydata = {\n      value,\n      name,\n    }\n    setData([...data, mydata]);\n    setName('');\n    setValue('');\n  }\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data))\n  }, [data])\n\n  return (\n    <>\n      <Container>\n        <NavBar />\n        <Typography variant=\"h6\">\n          Crypto Coins\n        </Typography>\n        <Box>\n          {\n            cryptoData.map((item) => (\n              <CryptoBlock value={getValue} handleClose={handleClose} name={item} />\n            ))\n          }\n        </Box>\n        {/* <Button onClick={handleClose}>Buy</Button> */}\n      </Container>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}