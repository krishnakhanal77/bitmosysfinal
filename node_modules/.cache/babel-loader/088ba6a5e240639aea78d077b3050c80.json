{"ast":null,"code":"var _jsxFileName = \"/home/gsub/Desktop/bitmosys/src/pages/crypto-page/CryptoPage.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport CryptoBlock from \"../../myComponents/crypto-block/CryptoBlock\";\nimport NavBar from \"../../myComponents/navbar/Navbar\";\nimport cryptoData from \"../../data\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CryptoPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState('');\n  const [name, setName] = useState('');\n  const [image, setImage] = useState('');\n\n  function getValue(value, name, image) {\n    setValue(value);\n    setName(name);\n    setImage(image);\n  }\n\n  function handleClose(e) {\n    // e.preventDefault();\n    let mydata = {\n      value,\n      name,\n      image\n    };\n    setData([...data, mydata]);\n    setName('');\n    setValue('');\n    setImage('');\n  } // function handleBuy(){\n  //   localStorage.setItem('data', JSON.stringify(data));\n  // }\n\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"header\",\n        sx: {\n          padding: \"50px 60px\",\n          mb: \"10px\",\n          borderRadius: \"15px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"small\",\n          children: \"Crypto Coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: cryptoData.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(CryptoBlock, {\n            value: getValue // handleBuy={handleBuy}\n            ,\n            handleClose: handleClose,\n            item: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CryptoPage, \"sQJiPq1dzwskGg9GALnCyI/9vho=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CryptoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoPage\");","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/pages/crypto-page/CryptoPage.js"],"names":["Container","Typography","Box","useEffect","useState","useNavigate","CryptoBlock","NavBar","cryptoData","CryptoPage","navigate","data","setData","value","setValue","name","setName","image","setImage","getValue","handleClose","e","mydata","localStorage","setItem","JSON","stringify","padding","mb","borderRadius","map","item"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,eAAtC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,aAAP;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASe,QAAT,CAAkBN,KAAlB,EAAyBE,IAAzB,EAA+BE,KAA/B,EAAsC;AACpCH,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAED,WAASG,WAAT,CAAqBC,CAArB,EAAwB;AACtB;AACA,QAAIC,MAAM,GAAG;AACXT,MAAAA,KADW;AAEXE,MAAAA,IAFW;AAGXE,MAAAA;AAHW,KAAb;AAKAL,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUW,MAAV,CAAD,CAAP;AACAN,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAxBkC,CA0BnC;AACA;AACA;;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAef,IAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,EAAE,EAAE;AAAEgB,UAAAA,OAAO,EAAE,WAAX;AAAwBC,UAAAA,EAAE,EAAE,MAA5B;AAAoCC,UAAAA,YAAY,EAAE;AAAlD,SAA5B;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,GAAD;AAAA,kBAEIrB,UAAU,CAACsB,GAAX,CAAgBC,IAAD,iBACb;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,KAAK,EAAEZ,QADT,CAEE;AAFF;AAGE,YAAA,WAAW,EAAEC,WAHf;AAIE,YAAA,IAAI,EAAEW;AAJR;AAAA;AAAA;AAAA;AAAA;AADF,yBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0BD;;GA5DuBtB,U;UACLJ,W;;;KADKI,U","sourcesContent":["import { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport CryptoBlock from \"../../myComponents/crypto-block/CryptoBlock\";\nimport NavBar from \"../../myComponents/navbar/Navbar\";\nimport cryptoData from \"../../data\";\nimport \"./style.css\"\n\nexport default function CryptoPage() {\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState('');\n  const [name, setName] = useState('');\n  const [image, setImage] = useState('');\n\n  function getValue(value, name, image) {\n    setValue(value);\n    setName(name);\n    setImage(image);\n  }\n\n  function handleClose(e) {\n    // e.preventDefault();\n    let mydata = {\n      value,\n      name,\n      image,\n    }\n    setData([...data, mydata]);\n    setName('');\n    setValue('');\n    setImage('')\n  }\n\n  // function handleBuy(){\n  //   localStorage.setItem('data', JSON.stringify(data));\n  // }\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data))\n  }, [data])\n\n  return (\n    <>\n      <Container>\n        <NavBar />\n        <Box className=\"header\" sx={{ padding: \"50px 60px\", mb: \"10px\", borderRadius: \"15px\" }}>\n          <Typography variant=\"small\">\n            Crypto Coins\n          </Typography>\n        </Box>\n        <Box>\n          {\n            cryptoData.map((item) => (\n              <>\n                <CryptoBlock\n                  value={getValue}\n                  // handleBuy={handleBuy}\n                  handleClose={handleClose}\n                  item={item}\n                />\n              </>\n            ))\n          }\n        </Box>\n      </Container>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}