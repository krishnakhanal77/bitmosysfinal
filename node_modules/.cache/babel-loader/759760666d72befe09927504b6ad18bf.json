{"ast":null,"code":"var _jsxFileName = \"/home/gsub/Desktop/bitmosys/src/myComponents/dialog-box/DialogBox.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport cryptoData from '../../data';\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DialogBox(props) {\n  _s();\n\n  const [crypto, setCrypto] = React.useState('');\n  console.log(crypto);\n\n  const handleChange = event => {\n    setCrypto(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: props.open,\n      onClose: props.handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Exchange Crypto With\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Crypto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: crypto,\n            label: \"Choose\",\n            onChange: handleChange,\n            children: cryptoData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: index,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Crypto Quantity\",\n          type: \"number\",\n          fullWidth: true,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.handleClose,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DialogBox, \"GueSrqC+7eL/xBNyC5pr1+JujYE=\");\n\n_c = DialogBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogBox\");","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/myComponents/dialog-box/DialogBox.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","cryptoData","FormControl","InputLabel","MenuItem","Select","DialogBox","props","crypto","setCrypto","useState","console","log","handleChange","event","target","value","open","handleClose","map","item","index","name"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,MAA5C,QAA0D,eAA1D;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,KAAK,CAACgB,QAAN,CAAe,EAAf,CAA5B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AAEA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC/BL,IAAAA,SAAS,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACA,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAET,KAAK,CAACU,IAApB;AAA0B,MAAA,OAAO,EAAEV,KAAK,CAACW,WAAzC;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,SAAS,MAAtB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,0BADV;AAEE,YAAA,EAAE,EAAC,oBAFL;AAGE,YAAA,KAAK,EAAEV,MAHT;AAIE,YAAA,KAAK,EAAC,QAJR;AAKE,YAAA,QAAQ,EAAEK,YALZ;AAAA,sBAQIZ,UAAU,CAACkB,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACb,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEA,KAAjB;AAAA,wBAAyBD,IAAI,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADF;AARJ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,MAAM,EAAC,OAFT;AAGE,UAAA,EAAE,EAAC,MAHL;AAIE,UAAA,KAAK,EAAC,iBAJR;AAKE,UAAA,IAAI,EAAC,QALP;AAME,UAAA,SAAS,EAAE,IANb;AAOE,UAAA,OAAO,EAAC;AAPV;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eA6BE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEf,KAAK,CAACW,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEX,KAAK,CAACW,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GA/CuBZ,S;;KAAAA,S","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport cryptoData from '../../data';\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\n\nexport default function DialogBox(props) {\n  const [crypto, setCrypto] = React.useState('');\n\n  console.log(crypto)\n\n  const handleChange = (event) => {\n   setCrypto(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={props.open} onClose={props.handleClose}>\n        <DialogTitle>Exchange Crypto With</DialogTitle>\n        <DialogContent>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">Crypto</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={crypto}\n              label=\"Choose\"\n              onChange={handleChange}\n            >\n              {\n                cryptoData.map((item, index) => (\n                  <MenuItem value={index}>{item.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Crypto Quantity\"\n            type=\"number\"\n            fullWidth={true}\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose}>Cancel</Button>\n          <Button onClick={props.handleClose}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}