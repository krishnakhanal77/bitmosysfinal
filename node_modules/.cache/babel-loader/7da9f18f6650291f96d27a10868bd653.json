{"ast":null,"code":"var _jsxFileName = \"/home/gsub/Desktop/bitmosys/src/myComponents/crypto-block/CryptoBlock.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Typography, CardMedia, DialogActions, FormLabel, FormControl } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CryptoBlock(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  console.log(data);\n  const [value, setValue] = useState(); // const navigate = useNavigate();\n  // const [data, setData] = useState([])\n  // console.log(data);\n\n  const [open, setOpen] = useState(false); // const [value, setValue] = useState();\n  // const [name, setName] = useState();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  }; // const handleBuy = (e) => {\n  //   e.preventDefault();\n  //   let mydata = {\n  //     value,\n  //     name,\n  //   }\n  //   setData([...data, mydata]);\n  //   setName('');\n  //   setValue('');\n  // }\n\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // const handleChange = (e) => {\n  //   setValue(e.target.value);\n  //   setName(props.name)\n  // };\n  // useEffect (()=> {\n  //   localStorage.setItem('data', JSON.stringify(data))\n  // },[data])\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let mydata = {\n      value\n    };\n    setData([...data, mydata]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"50\",\n        width: \"50\",\n        image: \"#\",\n        alt: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\" \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClickOpen,\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Amount\",\n            type: \"number\",\n            fullWidth: true,\n            variant: \"standard\",\n            onChange: e => setValue(e.target.value),\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CryptoBlock, \"EkaWFemJtgdvsytvIVMnxmaVrWU=\");\n\n_c = CryptoBlock;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoBlock\");","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/myComponents/crypto-block/CryptoBlock.js"],"names":["Button","Dialog","DialogContent","DialogContentText","DialogTitle","TextField","Typography","CardMedia","DialogActions","FormLabel","FormControl","Box","useEffect","useState","useNavigate","CryptoBlock","props","data","setData","console","log","value","setValue","open","setOpen","handleClickOpen","handleClose","handleSubmit","e","preventDefault","mydata","display","flexDirection","name","target"],"mappings":"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","sourcesContent":["import { Button, Dialog, DialogContent, DialogContentText, DialogTitle, TextField, Typography, CardMedia, DialogActions, FormLabel, FormControl } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function CryptoBlock(props) {\n\n  const [data, setData] = useState([]);\nconsole.log(data);\n  const [value, setValue] = useState();\n\n  // const navigate = useNavigate();\n  // const [data, setData] = useState([])\n  // console.log(data);\n  const [open, setOpen] = useState(false);\n  // const [value, setValue] = useState();\n  // const [name, setName] = useState();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // const handleBuy = (e) => {\n  //   e.preventDefault();\n  //   let mydata = {\n  //     value,\n  //     name,\n  //   }\n  //   setData([...data, mydata]);\n  //   setName('');\n  //   setValue('');\n  // }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const handleChange = (e) => {\n  //   setValue(e.target.value);\n  //   setName(props.name)\n  // };\n\n  // useEffect (()=> {\n  //   localStorage.setItem('data', JSON.stringify(data))\n  // },[data])\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let mydata={\n      value,\n    }\n    setData([...data, mydata]);\n  }\n\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', flexDirection: 'row' }}>\n        <CardMedia\n          component=\"img\"\n          height=\"50\"\n          width=\"50\"\n          image=\"#\"\n          alt={props.name}\n        />\n        <Typography> {props.name}</Typography>\n        <Button variant=\"outlined\" onClick={handleClickOpen} >Buy</Button>\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle>{props.name}</DialogTitle>\n          <FormControl onSubmit={handleSubmit}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Amount\"\n              type=\"number\"\n              fullWidth\n              variant=\"standard\"\n              onChange={(e) => setValue(e.target.value)}\n              value={value}\n            />\n             <Button type=\"submit\">Buy</Button>\n          </FormControl>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n           \n          </DialogActions>\n        </Dialog>\n      </Box>\n    </>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}