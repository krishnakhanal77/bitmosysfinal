{"ast":null,"code":"var _jsxFileName = \"/home/gsub/Desktop/bitmosys/src/pages/home-page/HomePage.js\",\n    _s = $RefreshSig$();\n\n// import { Button, CardMedia, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\"; // import { useNavigate } from \"react-router\";\n// import cryptoData from \"../../data\";\n// import DialogBox from \"../../myComponents/dialog-box/DialogBox\";\n// import NavBar from \"../../myComponents/navbar/Navbar\";\n\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  // const navigate = useNavigate();\n  // const getDataFromLS = () => {\n  //   const data = JSON.parse(localStorage.getItem('data'));\n  //   return data || [];\n  // }\n  const [data, setData] = useState(); // const [open, setOpen] = useState(false);\n  // let total = data?.reduce((sum, item) => sum + Number(item.value), 0);\n  // const [id, setId] = useState('');\n  // const [name, setName] = useState('');\n  // const [value, setValue] = useState('');\n  // const [indexNumber, setIndexNumber] = useState(\"\");\n  // const [exchangeImage, setExchangeImage] = useState(\"\")\n  // const [exchangeName, setExchangeName] = useState(\"\")\n  // const [exchangeIndex, setExchangeIndex] = useState(\"\")\n  // const showExchangeIndex = exchangeIndex + 2;\n  // const showExchangeName = exchangeName;\n  // const showExchangeImage = exchangeImage;\n  // const exchangeValue = value - indexNumber;\n  // const showExchangeValue = Math.abs(exchangeValue);\n  // const cryptoName = name;\n  // const cryptoId = id;\n  // const cryptoValue = value;\n  // const cryptoImage = cryptoData[id]?.image;\n  // const getDropdownData = (name, value) => {\n  //   setName(name);\n  //   setId(value);\n  // }\n  // const getInputData = (value) => {\n  //   setValue(value)\n  // }\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n  // const removeDataIfZero = () => {\n  //   let newShowArray = data.filter(function (showArray) {\n  //     return showArray.value != \"0\";\n  //   });\n  //   localStorage.setItem('data', JSON.stringify(newShowArray));\n  //   window.location.reload();\n  // }\n  // const handleRemove = (id) => {\n  //   data.splice(id, 1)\n  //   localStorage.setItem('data', JSON.stringify(data))\n  //   navigate(\"/\")\n  // }\n  // const showExchangedData = {\n  //   \"id\": cryptoId,\n  //   \"name\": showExchangeName,\n  //   \"value\": showExchangeValue,\n  //   \"image\": showExchangeImage\n  // }\n  // const handleShowManageExchange = () => {\n  //   let newShowData = data;\n  //   newShowData.unshift(showExchangedData)\n  //   localStorage.setItem('data', JSON.stringify(newShowData))\n  //   navigate(\"/\")\n  // }\n  // const removePreviousData = () => {\n  //   data.splice(showExchangeIndex, 1)\n  //   localStorage.setItem('data', JSON.stringify(data))\n  //   navigate(\"/\")\n  // }\n  // const getExchangedData = {\n  //   \"name\": cryptoName,\n  //   \"value\": cryptoValue,\n  //   \"image\": cryptoImage\n  // }\n  // const handleSubmit = () => {\n  //   let newData = data;\n  //   newData.unshift(getExchangedData)\n  //   localStorage.setItem('data', JSON.stringify(newData))\n  //   navigate(\"/\")\n  // }\n  // const handleManageExchange = (indexNumber, exchangeImage, exchangeName, index) => {\n  //   setIndexNumber(indexNumber);\n  //   setExchangeImage(exchangeImage);\n  //   setExchangeName(exchangeName);\n  //   setExchangeIndex(index);\n  // }\n\n  useEffect(() => {\n    setData(JSON.parse(localStorage.getItem('data')));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(Typography, {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this) // <Container>\n  //   <NavBar />\n  //   <Box className=\"header\" sx={{ padding: \"45px 60px\", mb: \"10px\", borderRadius: \"15px\" }}>\n  //     <Box>\n  //       <Typography variant='small'>Number Of Crypto Coins Types</Typography> <br />\n  //       <Typography variant='small'>{data?.length || {}}</Typography>\n  //     </Box>\n  //     <Box>\n  //       <Typography variant='small'>Number Of Crypto Coins</Typography> <br />\n  //       <Typography variant='small'>\n  //         {total}\n  //       </Typography> <br />\n  //     </Box>\n  //   </Box>\n  //   {\n  //     data?.length ?\n  //       <Box>\n  //         {\n  //           data?.map((item, index) => (\n  //             <Box key={index} className=\"content\" sx={{ padding: \"15px\", mb: \"10px\" }}>\n  //               <Box sx={{ display: \"flex\", justifyContent: \"space-between\", padding: \"15px\" }}>\n  //                 <Box sx={{ display: \"flex\", width: \"50px\" }}>\n  //                   <CardMedia\n  //                     sx={{ pr: \"10px\" }}\n  //                     component=\"img\"\n  //                     height=\"30\"\n  //                     width=\"30\"\n  //                     image={item.image}\n  //                     alt={item.name}\n  //                   />\n  //                   <Typography sx={{ pt: \"5px\" }} key={index} variant=\"small\">{item.name} </Typography>\n  //                 </Box>\n  //                 <Box sx={{ pt: \"5px\" }}>\n  //                   <Typography key={index} variant=\"small\">\n  //                     {item.value}\n  //                   </Typography>\n  //                 </Box>\n  //                 <Box>\n  //                   <Button onClick={() => {\n  //                     handleClickOpen();\n  //                     handleManageExchange(item.value, item.image, item.name, index);\n  //                   }} key={index} sx={{ mr: \"10px\", BackgroundColor: \"red\" }} variant=\"contained\" >exchange</Button>\n  //                   <Button\n  //                     onClick={() => handleRemove(index)}\n  //                     variant=\"contained\"\n  //                   >\n  //                     Remove\n  //                   </Button>\n  //                 </Box>\n  //               </Box>\n  //             </Box>\n  //           ))\n  //         }\n  //       </Box>\n  //       :\n  //       <Box className=\"content\" sx={{ padding: \"15px\", mb: \"10px\" }}>\n  //         <Box sx={{ display: \"flex\", justifyContent: \"space-between\", padding: \"15px\" }}>\n  //           <Typography variant=\"small\">Opps! No Crypto Coins found ):</Typography>\n  //           <Button variant=\"contained\" onClick={() => navigate('/crypto-page')}>Buy Crypto</Button>\n  //         </Box>\n  //       </Box>\n  //   }\n  //   <Box>\n  //     <DialogBox\n  //       indexValue={indexNumber}\n  //       exchangeName={exchangeName}\n  //       handleClickOpen={handleClickOpen}\n  //       handleClose={handleClose}\n  //       handleSubmit={handleSubmit}\n  //       getDropdownData={getDropdownData}\n  //       getInputData={getInputData}\n  //       handleShowManageExchange={handleShowManageExchange}\n  //       removePreviousData={removePreviousData}\n  //       removeDataIfZero={removeDataIfZero}\n  //       value={name}\n  //       open={open}\n  //     />\n  //   </Box>\n  // </Container>\n  ;\n}\n\n_s(HomePage, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/pages/home-page/HomePage.js"],"names":["Box","useEffect","useState","HomePage","data","setData","JSON","parse","localStorage","getItem","map","item","name"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,aAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;AACA;AACA;AACA;;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC;AAEA;AACA;AACA;AACA;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,EAAhC,CARiC,CASjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAD,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,GAAD;AAAA,cACGL,IAAI,CAACM,GAAL,CAAUC,IAAD,iBACR,QAAC,UAAD;AAAA,gBAAaA,IAAI,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF,CAME;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArFF;AAuFD;;GA9LuBT,Q;;KAAAA,Q","sourcesContent":["// import { Button, CardMedia, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n// import cryptoData from \"../../data\";\n// import DialogBox from \"../../myComponents/dialog-box/DialogBox\";\n// import NavBar from \"../../myComponents/navbar/Navbar\";\nimport \"./style.css\"\n\nexport default function HomePage() {\n  // const navigate = useNavigate();\n\n  // const getDataFromLS = () => {\n  //   const data = JSON.parse(localStorage.getItem('data'));\n  //   return data || [];\n  // }\n\n  const [data, setData] = useState();\n  // const [open, setOpen] = useState(false);\n  // let total = data?.reduce((sum, item) => sum + Number(item.value), 0);\n  // const [id, setId] = useState('');\n  // const [name, setName] = useState('');\n  // const [value, setValue] = useState('');\n  // const [indexNumber, setIndexNumber] = useState(\"\");\n  // const [exchangeImage, setExchangeImage] = useState(\"\")\n  // const [exchangeName, setExchangeName] = useState(\"\")\n  // const [exchangeIndex, setExchangeIndex] = useState(\"\")\n  // const showExchangeIndex = exchangeIndex + 2;\n  // const showExchangeName = exchangeName;\n  // const showExchangeImage = exchangeImage;\n  // const exchangeValue = value - indexNumber;\n  // const showExchangeValue = Math.abs(exchangeValue);\n  // const cryptoName = name;\n  // const cryptoId = id;\n  // const cryptoValue = value;\n  // const cryptoImage = cryptoData[id]?.image;\n\n  // const getDropdownData = (name, value) => {\n  //   setName(name);\n  //   setId(value);\n  // }\n\n  // const getInputData = (value) => {\n  //   setValue(value)\n  // }\n\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n\n  // const removeDataIfZero = () => {\n  //   let newShowArray = data.filter(function (showArray) {\n  //     return showArray.value != \"0\";\n  //   });\n  //   localStorage.setItem('data', JSON.stringify(newShowArray));\n  //   window.location.reload();\n  // }\n\n  // const handleRemove = (id) => {\n  //   data.splice(id, 1)\n  //   localStorage.setItem('data', JSON.stringify(data))\n  //   navigate(\"/\")\n  // }\n\n  // const showExchangedData = {\n  //   \"id\": cryptoId,\n  //   \"name\": showExchangeName,\n  //   \"value\": showExchangeValue,\n  //   \"image\": showExchangeImage\n  // }\n\n  // const handleShowManageExchange = () => {\n  //   let newShowData = data;\n  //   newShowData.unshift(showExchangedData)\n  //   localStorage.setItem('data', JSON.stringify(newShowData))\n  //   navigate(\"/\")\n  // }\n\n  // const removePreviousData = () => {\n  //   data.splice(showExchangeIndex, 1)\n  //   localStorage.setItem('data', JSON.stringify(data))\n  //   navigate(\"/\")\n  // }\n\n  // const getExchangedData = {\n  //   \"name\": cryptoName,\n  //   \"value\": cryptoValue,\n  //   \"image\": cryptoImage\n  // }\n\n  // const handleSubmit = () => {\n  //   let newData = data;\n  //   newData.unshift(getExchangedData)\n  //   localStorage.setItem('data', JSON.stringify(newData))\n  //   navigate(\"/\")\n  // }\n\n  // const handleManageExchange = (indexNumber, exchangeImage, exchangeName, index) => {\n  //   setIndexNumber(indexNumber);\n  //   setExchangeImage(exchangeImage);\n  //   setExchangeName(exchangeName);\n  //   setExchangeIndex(index);\n  // }\n\n  useEffect(() => {\n    setData(JSON.parse(localStorage.getItem('data')));\n  }, [])\n\n  return (\n    <Box>\n      {data.map((item) => (\n        <Typography>{item.name}</Typography>\n      ))}\n    </Box>\n    // <Container>\n    //   <NavBar />\n    //   <Box className=\"header\" sx={{ padding: \"45px 60px\", mb: \"10px\", borderRadius: \"15px\" }}>\n    //     <Box>\n    //       <Typography variant='small'>Number Of Crypto Coins Types</Typography> <br />\n    //       <Typography variant='small'>{data?.length || {}}</Typography>\n    //     </Box>\n\n    //     <Box>\n    //       <Typography variant='small'>Number Of Crypto Coins</Typography> <br />\n    //       <Typography variant='small'>\n    //         {total}\n    //       </Typography> <br />\n    //     </Box>\n    //   </Box>\n    //   {\n    //     data?.length ?\n    //       <Box>\n    //         {\n    //           data?.map((item, index) => (\n    //             <Box key={index} className=\"content\" sx={{ padding: \"15px\", mb: \"10px\" }}>\n    //               <Box sx={{ display: \"flex\", justifyContent: \"space-between\", padding: \"15px\" }}>\n    //                 <Box sx={{ display: \"flex\", width: \"50px\" }}>\n    //                   <CardMedia\n    //                     sx={{ pr: \"10px\" }}\n    //                     component=\"img\"\n    //                     height=\"30\"\n    //                     width=\"30\"\n    //                     image={item.image}\n    //                     alt={item.name}\n    //                   />\n    //                   <Typography sx={{ pt: \"5px\" }} key={index} variant=\"small\">{item.name} </Typography>\n    //                 </Box>\n    //                 <Box sx={{ pt: \"5px\" }}>\n    //                   <Typography key={index} variant=\"small\">\n    //                     {item.value}\n    //                   </Typography>\n    //                 </Box>\n    //                 <Box>\n    //                   <Button onClick={() => {\n    //                     handleClickOpen();\n    //                     handleManageExchange(item.value, item.image, item.name, index);\n    //                   }} key={index} sx={{ mr: \"10px\", BackgroundColor: \"red\" }} variant=\"contained\" >exchange</Button>\n    //                   <Button\n    //                     onClick={() => handleRemove(index)}\n    //                     variant=\"contained\"\n    //                   >\n    //                     Remove\n    //                   </Button>\n    //                 </Box>\n    //               </Box>\n    //             </Box>\n    //           ))\n    //         }\n    //       </Box>\n    //       :\n    //       <Box className=\"content\" sx={{ padding: \"15px\", mb: \"10px\" }}>\n    //         <Box sx={{ display: \"flex\", justifyContent: \"space-between\", padding: \"15px\" }}>\n    //           <Typography variant=\"small\">Opps! No Crypto Coins found ):</Typography>\n    //           <Button variant=\"contained\" onClick={() => navigate('/crypto-page')}>Buy Crypto</Button>\n    //         </Box>\n    //       </Box>\n    //   }\n    //   <Box>\n    //     <DialogBox\n    //       indexValue={indexNumber}\n    //       exchangeName={exchangeName}\n    //       handleClickOpen={handleClickOpen}\n    //       handleClose={handleClose}\n    //       handleSubmit={handleSubmit}\n    //       getDropdownData={getDropdownData}\n    //       getInputData={getInputData}\n    //       handleShowManageExchange={handleShowManageExchange}\n    //       removePreviousData={removePreviousData}\n    //       removeDataIfZero={removeDataIfZero}\n    //       value={name}\n    //       open={open}\n    //     />\n    //   </Box>\n    // </Container>\n  )\n}"]},"metadata":{},"sourceType":"module"}