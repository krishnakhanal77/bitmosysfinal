{"ast":null,"code":"var _jsxFileName = \"/home/gsub/Desktop/bitmosys/src/pages/home-page/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { Button, CardMedia, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\"; // import cryptoData from \"../../data\";\n\nimport DialogBox from \"../../myComponents/dialog-box/DialogBox\"; // import NavBar from \"../../myComponents/navbar/Navbar\";\n\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const navigate = useNavigate();\n\n  const getDataFromLS = () => {\n    const data = JSON.parse(localStorage.getItem('data'));\n    return data || [];\n  };\n\n  const [data, setData] = useState(getDataFromLS());\n  const [open, setOpen] = useState(false); // let total = data?.reduce((sum, item) => sum + Number(item.value), 0);\n  // const [id, setId] = useState('');\n  // const [name, setName] = useState('');\n  // const [value, setValue] = useState('');\n\n  const [indexNumber, setIndexNumber] = useState(\"\"); // const [exchangeImage, setExchangeImage] = useState(\"\")\n  // const [exchangeName, setExchangeName] = useState(\"\")\n  // const [exchangeIndex, setExchangeIndex] = useState(\"\")\n  // const showExchangeIndex = exchangeIndex + 2;\n  // const showExchangeName = exchangeName;\n  // const showExchangeImage = exchangeImage;\n  // const exchangeValue = value - indexNumber;\n  // const showExchangeValue = Math.abs(exchangeValue);\n  // const cryptoName = name;\n  // const cryptoId = id;\n  // const cryptoValue = value;\n  // const cryptoImage = cryptoData[id]?.image;\n  // const getDropdownData = (name, value) => {\n  //   setName(name);\n  //   setId(value);\n  // }\n  // const getInputData = (value) => {\n  //   setValue(value)\n  // }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // const removeDataIfZero = () => {\n  //   let newShowArray = data.filter(function (showArray) {\n  //     return showArray.value != \"0\";\n  //   });\n  //   localStorage.setItem('data', JSON.stringify(newShowArray));\n  //   window.location.reload();\n  // }\n  // const handleRemove = (id) => {\n  //   data.splice(id, 1)\n  //   localStorage.setItem('data', JSON.stringify(data))\n  //   navigate(\"/\")\n  // }\n  // const showExchangedData = {\n  //   \"id\": cryptoId,\n  //   \"name\": showExchangeName,\n  //   \"value\": showExchangeValue,\n  //   \"image\": showExchangeImage\n  // }\n  // const handleShowManageExchange = () => {\n  //   let newShowData = data;\n  //   newShowData.unshift(showExchangedData)\n  //   localStorage.setItem('data', JSON.stringify(newShowData))\n  //   navigate(\"/\")\n  // }\n  // const removePreviousData = () => {\n  //   data.splice(showExchangeIndex, 1)\n  //   localStorage.setItem('data', JSON.stringify(data))\n  //   navigate(\"/\")\n  // }\n  // const getExchangedData = {\n  //   \"name\": cryptoName,\n  //   \"value\": cryptoValue,\n  //   \"image\": cryptoImage\n  // }\n  // const handleSubmit = () => {\n  //   let newData = data;\n  //   newData.unshift(getExchangedData)\n  //   localStorage.setItem('data', JSON.stringify(newData))\n  //   navigate(\"/\")\n  // }\n\n\n  const handleManageExchange = (indexNumber, exchangeImage, exchangeName, index) => {\n    setIndexNumber(indexNumber); // setExchangeImage(exchangeImage);\n    // setExchangeName(exchangeName);\n    // setExchangeIndex(index);\n  };\n\n  useEffect(() => {\n    setData(JSON.parse(localStorage.getItem('data')));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: (data === null || data === void 0 ? void 0 : data.length) ? /*#__PURE__*/_jsxDEV(Box, {\n        children: data === null || data === void 0 ? void 0 : data.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n          className: \"content\",\n          sx: {\n            padding: \"15px\",\n            mb: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                width: \"50px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                sx: {\n                  pr: \"10px\"\n                },\n                component: \"img\",\n                height: \"30\",\n                width: \"30\",\n                image: item.image,\n                alt: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  pt: \"5px\"\n                },\n                variant: \"small\",\n                children: [item.name, \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                pt: \"5px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"small\",\n                children: item.value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  handleClickOpen();\n                  handleManageExchange(item.value, item.image, item.name, index);\n                },\n                sx: {\n                  mr: \"10px\",\n                  BackgroundColor: \"red\"\n                },\n                variant: \"contained\",\n                children: \"exchange\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button // onClick={() => handleRemove(index)}\n              , {\n                variant: \"contained\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        className: \"content\",\n        sx: {\n          padding: \"15px\",\n          mb: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            padding: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"small\",\n            children: \"Opps! No Crypto Coins found ):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => navigate('/crypto-page'),\n            children: \"Buy Crypto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(DialogBox, {\n        indexValue: indexNumber // exchangeName={exchangeName}\n        // handleClickOpen={handleClickOpen}\n        ,\n        handleClose: handleClose // handleSubmit={handleSubmit}\n        // getDropdownData={getDropdownData}\n        // getInputData={getInputData}\n        // handleShowManageExchange={handleShowManageExchange}\n        // removePreviousData={removePreviousData}\n        // removeDataIfZero={removeDataIfZero}\n        // value={name}\n        ,\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"FBs2ukO9/UpuBE9Kici6sUz6Qlg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/pages/home-page/HomePage.js"],"names":["Button","CardMedia","Container","Typography","Box","useEffect","useState","useNavigate","DialogBox","HomePage","navigate","getDataFromLS","data","JSON","parse","localStorage","getItem","setData","open","setOpen","indexNumber","setIndexNumber","handleClickOpen","handleClose","handleManageExchange","exchangeImage","exchangeName","index","length","map","item","padding","mb","display","justifyContent","width","pr","image","name","pt","value","mr","BackgroundColor"],"mappings":"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","sourcesContent":["import { Button, CardMedia, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n// import cryptoData from \"../../data\";\nimport DialogBox from \"../../myComponents/dialog-box/DialogBox\";\n// import NavBar from \"../../myComponents/navbar/Navbar\";\nimport \"./style.css\"\n\nexport default function HomePage() {\n  const navigate = useNavigate();\n\n  const getDataFromLS = () => {\n    const data = JSON.parse(localStorage.getItem('data'));\n    return data || [];\n  }\n\n  const [data, setData] = useState(getDataFromLS());\n  const [open, setOpen] = useState(false);\n  // let total = data?.reduce((sum, item) => sum + Number(item.value), 0);\n  // const [id, setId] = useState('');\n  // const [name, setName] = useState('');\n  // const [value, setValue] = useState('');\n  const [indexNumber, setIndexNumber] = useState(\"\");\n  // const [exchangeImage, setExchangeImage] = useState(\"\")\n  // const [exchangeName, setExchangeName] = useState(\"\")\n  // const [exchangeIndex, setExchangeIndex] = useState(\"\")\n  // const showExchangeIndex = exchangeIndex + 2;\n  // const showExchangeName = exchangeName;\n  // const showExchangeImage = exchangeImage;\n  // const exchangeValue = value - indexNumber;\n  // const showExchangeValue = Math.abs(exchangeValue);\n  // const cryptoName = name;\n  // const cryptoId = id;\n  // const cryptoValue = value;\n  // const cryptoImage = cryptoData[id]?.image;\n\n  // const getDropdownData = (name, value) => {\n  //   setName(name);\n  //   setId(value);\n  // }\n\n  // const getInputData = (value) => {\n  //   setValue(value)\n  // }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const removeDataIfZero = () => {\n  //   let newShowArray = data.filter(function (showArray) {\n  //     return showArray.value != \"0\";\n  //   });\n  //   localStorage.setItem('data', JSON.stringify(newShowArray));\n  //   window.location.reload();\n  // }\n\n  // const handleRemove = (id) => {\n  //   data.splice(id, 1)\n  //   localStorage.setItem('data', JSON.stringify(data))\n  //   navigate(\"/\")\n  // }\n\n  // const showExchangedData = {\n  //   \"id\": cryptoId,\n  //   \"name\": showExchangeName,\n  //   \"value\": showExchangeValue,\n  //   \"image\": showExchangeImage\n  // }\n\n  // const handleShowManageExchange = () => {\n  //   let newShowData = data;\n  //   newShowData.unshift(showExchangedData)\n  //   localStorage.setItem('data', JSON.stringify(newShowData))\n  //   navigate(\"/\")\n  // }\n\n  // const removePreviousData = () => {\n  //   data.splice(showExchangeIndex, 1)\n  //   localStorage.setItem('data', JSON.stringify(data))\n  //   navigate(\"/\")\n  // }\n\n  // const getExchangedData = {\n  //   \"name\": cryptoName,\n  //   \"value\": cryptoValue,\n  //   \"image\": cryptoImage\n  // }\n\n  // const handleSubmit = () => {\n  //   let newData = data;\n  //   newData.unshift(getExchangedData)\n  //   localStorage.setItem('data', JSON.stringify(newData))\n  //   navigate(\"/\")\n  // }\n\n  const handleManageExchange = (indexNumber, exchangeImage, exchangeName, index) => {\n    setIndexNumber(indexNumber);\n    // setExchangeImage(exchangeImage);\n    // setExchangeName(exchangeName);\n    // setExchangeIndex(index);\n  }\n\n  useEffect(() => {\n    setData(JSON.parse(localStorage.getItem('data')));\n  }, [])\n\n  return (\n    <Container>\n    {/* //   <NavBar />\n    //   <Box className=\"header\" sx={{ padding: \"45px 60px\", mb: \"10px\", borderRadius: \"15px\" }}>\n    //     <Box>\n    //       <Typography variant='small'>Number Of Crypto Coins Types</Typography> <br />\n    //       <Typography variant='small'>{data?.length || {}}</Typography>\n    //     </Box>\n\n    //     <Box>\n    //       <Typography variant='small'>Number Of Crypto Coins</Typography> <br />\n    //       <Typography variant='small'>\n    //         {total}\n    //       </Typography> <br />\n    //     </Box>\n    //   </Box> */}\n    <>\n      {\n        data?.length ?\n          <Box>\n            {\n              data?.map((item, index) => (\n                <Box key={index} className=\"content\" sx={{ padding: \"15px\", mb: \"10px\" }}>\n                  <Box sx={{ display: \"flex\", justifyContent: \"space-between\", padding: \"15px\" }}>\n                    <Box sx={{ display: \"flex\", width: \"50px\" }}>\n                      <CardMedia\n                        sx={{ pr: \"10px\" }}\n                        component=\"img\"\n                        height=\"30\"\n                        width=\"30\"\n                        image={item.image}\n                        alt={item.name}\n                      />\n                      <Typography sx={{ pt: \"5px\" }} key={index} variant=\"small\">{item.name} </Typography>\n                    </Box>\n                    <Box sx={{ pt: \"5px\" }}>\n                      <Typography key={index} variant=\"small\">\n                        {item.value}\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Button onClick={() => {\n                        handleClickOpen();\n                        handleManageExchange(item.value, item.image, item.name, index);\n                      }} key={index} sx={{ mr: \"10px\", BackgroundColor: \"red\" }} variant=\"contained\" >exchange</Button>\n                      <Button\n                        // onClick={() => handleRemove(index)}\n                        variant=\"contained\"\n                      >\n                        Remove\n                      </Button>\n                    </Box>\n                  </Box>\n                </Box>\n              ))\n            }\n          </Box>\n          :\n          <Box className=\"content\" sx={{ padding: \"15px\", mb: \"10px\" }}>\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\", padding: \"15px\" }}>\n              <Typography variant=\"small\">Opps! No Crypto Coins found ):</Typography>\n              <Button variant=\"contained\" onClick={() => navigate('/crypto-page')}>Buy Crypto</Button>\n            </Box>\n          </Box>\n      }\n    </>\n      <Box>\n        <DialogBox\n          indexValue={indexNumber}\n          // exchangeName={exchangeName}\n          // handleClickOpen={handleClickOpen}\n          handleClose={handleClose}\n          // handleSubmit={handleSubmit}\n          // getDropdownData={getDropdownData}\n          // getInputData={getInputData}\n          // handleShowManageExchange={handleShowManageExchange}\n          // removePreviousData={removePreviousData}\n          // removeDataIfZero={removeDataIfZero}\n          // value={name}\n          open={open}\n        />\n      </Box>\n    </Container>\n  )\n}"]},"metadata":{},"sourceType":"module"}