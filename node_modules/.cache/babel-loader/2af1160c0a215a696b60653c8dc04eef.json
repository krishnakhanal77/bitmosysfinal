{"ast":null,"code":"var _jsxFileName = \"/home/gsub/Desktop/bitmosys/src/myComponents/dialog-box/DialogBox.js\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { InputLabel, MenuItem, Select } from '@mui/material';\nimport cryptoData from '../../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DialogBox(props) {\n  var _s = $RefreshSig$();\n\n  function CustomSelect(_ref) {\n    _s();\n\n    let {\n      onChange,\n      ...props\n    } = _ref;\n    const [selectedOption, setSelectedOption] = useState(props.isMulti ? [] : null);\n    const {\n      ValueContainer,\n      Placeholder\n    } = components;\n\n    const CustomValueContainer = _ref2 => {\n      let {\n        children,\n        ...props\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ValueContainer, { ...props,\n        children: [/*#__PURE__*/_jsxDEV(Placeholder, { ...props,\n          isFocused: props.isFocused,\n          children: props.selectProps.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), React.Children.map(children, child => child && child.type !== Placeholder ? child : null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    };\n  }\n\n  _s(CustomSelect, \"DIBCpIoXSbmTkTnR8C0ZA+bntrc=\");\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: props.open,\n      onClose: props.handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: cryptoData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(CustomSelect, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Crypto Quantity\",\n          type: \"number\",\n          fullWidth: true,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.handleClose,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_c = DialogBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogBox\");","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/myComponents/dialog-box/DialogBox.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","MenuItem","Select","cryptoData","DialogBox","props","CustomSelect","onChange","selectedOption","setSelectedOption","useState","isMulti","ValueContainer","Placeholder","components","CustomValueContainer","children","isFocused","selectProps","placeholder","Children","map","child","type","open","handleClose","name"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,eAA7C;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAIA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEvC,WAASC,YAAT,OAA8C;AAAA;;AAAA,QAAxB;AAAEC,MAAAA,QAAF;AAAY,SAAGF;AAAf,KAAwB;AAC5C,UAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCC,QAAQ,CAACL,KAAK,CAACM,OAAN,GAAgB,EAAhB,GAAqB,IAAtB,CAApD;AACA,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAkCC,UAAxC;;AACA,UAAMC,oBAAoB,GAAG,SAA4B;AAAA,UAA3B;AAAEC,QAAAA,QAAF;AAAY,WAAGX;AAAf,OAA2B;AACvD,0BACE,QAAC,cAAD,OAAoBA,KAApB;AAAA,gCACE,QAAC,WAAD,OAAiBA,KAAjB;AAAwB,UAAA,SAAS,EAAEA,KAAK,CAACY,SAAzC;AAAA,oBACGZ,KAAK,CAACa,WAAN,CAAkBC;AADrB;AAAA;AAAA;AAAA;AAAA,gBADF,EAKI1B,KAAK,CAAC2B,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,EAA6BM,KAAK,IAChCA,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeV,WAAxB,GAAsCS,KAAtC,GAA8C,IADhD,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbD;AAcD;;AAnBsC,KAE9BhB,YAF8B;;AAmBtC;AAEC,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,KAAK,CAACmB,IAApB;AAA0B,MAAA,OAAO,EAAEnB,KAAK,CAACoB,WAAzC;AAAA,8BACE,QAAC,WAAD;AAAA,kBAActB,UAAU,CAACuB;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,gCASA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBATA,eAYE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,MAAM,EAAC,OAFT;AAGE,UAAA,EAAE,EAAC,MAHL;AAIE,UAAA,KAAK,EAAC,iBAJR;AAKE,UAAA,IAAI,EAAC,QALP;AAME,UAAA,SAAS,EAAE,IANb;AAOE,UAAA,OAAO,EAAC;AAPV;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAwBE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAErB,KAAK,CAACoB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEpB,KAAK,CAACoB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;KAtDqBrB,S","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { InputLabel, MenuItem, Select } from '@mui/material';\nimport cryptoData from '../../data';\n\n\n\nexport default function DialogBox(props) {\n\n  function CustomSelect({ onChange, ...props }) {\n    const [selectedOption, setSelectedOption] = useState(props.isMulti ? [] : null);\n    const { ValueContainer, Placeholder } = components;\n    const CustomValueContainer = ({ children, ...props }) => {\n      return (\n        <ValueContainer {...props}>\n          <Placeholder {...props} isFocused={props.isFocused}>\n            {props.selectProps.placeholder}\n          </Placeholder>\n          {\n            React.Children.map(children, child =>\n              child && child.type !== Placeholder ? child : null\n            )\n          }\n        </ValueContainer>\n      );\n    };\n  };\n\n    return (\n      <div>\n        <Dialog open={props.open} onClose={props.handleClose}>\n          <DialogTitle>{cryptoData.name}</DialogTitle>\n          <DialogContent>\n            {/* <InputLabel id=\"label\">Select Crypto</InputLabel>\n          <Select fullWidth={true} labelId=\"label\" id=\"select\" value=\"subas\">\n            {\n              cryptoData.map((item, index) => (\n                <MenuItem key={index} value=\"10\" >{item.name}</MenuItem>\n              ))\n            }\n          </Select> */}\n          <CustomSelect\n\n          />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Crypto Quantity\"\n              type=\"number\"\n              fullWidth={true}\n              variant=\"standard\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={props.handleClose}>Cancel</Button>\n            <Button onClick={props.handleClose}>Subscribe</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}