{"ast":null,"code":"var _jsxFileName = \"/home/krsna/Desktop/bitmosys/src/pages/crypto-page/CryptoPage.js\";\nimport { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport CryptoBlock from \"../../myComponents/crypto-block/CryptoBlock\";\nimport NavBar from \"../../myComponents/navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CryptoPage() {\n  const cryptoData = [\"Bitcoin\", \"Gitcoin\", \"Litcoin\", \"LaudaCoin\", \"Bitcoin\", \"Gitcoin\", \"Litcoin\", \"LaudaCoin\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Crypto Coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: cryptoData.map((item, index) => /*#__PURE__*/_jsxDEV(CryptoBlock, {\n          name: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c = CryptoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoPage\");","map":{"version":3,"sources":["/home/krsna/Desktop/bitmosys/src/pages/crypto-page/CryptoPage.js"],"names":["Container","Typography","Box","CryptoBlock","NavBar","CryptoPage","cryptoData","map","item","index"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,eAAtC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAEnC,QAAMC,UAAU,GAAG,CAClB,SADkB,EAElB,SAFkB,EAGlB,SAHkB,EAIlB,WAJkB,EAKlB,SALkB,EAMlB,SANkB,EAOlB,SAPkB,EAQlB,WARkB,CAAnB;AAWA,sBACE;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIA,QAAC,GAAD;AAAA,kBAECA,UAAU,CAACC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACd,QAAC,WAAD;AAAa,UAAA,IAAI,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AAFD;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAqBD;KAlCuBH,U","sourcesContent":["import { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport CryptoBlock from \"../../myComponents/crypto-block/CryptoBlock\";\nimport NavBar from \"../../myComponents/navbar/Navbar\";\n\nexport default function CryptoPage() {\n\n  const cryptoData = [\n   \"Bitcoin\",\n   \"Gitcoin\",\n   \"Litcoin\",\n   \"LaudaCoin\",\n   \"Bitcoin\",\n   \"Gitcoin\",\n   \"Litcoin\",\n   \"LaudaCoin\"\n  ];\n\n  return (\n    <>\n    <NavBar/>\n    <Container>\n      <Typography variant=\"h6\">\n        Crypto Coins\n      </Typography>\n    <Box>\n   {\n     cryptoData.map((item, index) => (\n      <CryptoBlock name={item} />\n      ))\n   }\n    </Box>\n    </Container>\n\n\n\n   \n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}