{"ast":null,"code":"import _toConsumableArray from\"/home/gsub/Desktop/bitmosys/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/gsub/Desktop/bitmosys/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Container,Typography}from\"@mui/material\";import{Box}from\"@mui/system\";import{useEffect,useState}from\"react\";import CryptoBlock from\"../../myComponents/crypto-block/CryptoBlock\";import NavBar from\"../../myComponents/navbar/Navbar\";import cryptoData from\"../../data\";import\"./style.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CryptoPage(){var getDataFromLS=function getDataFromLS(){var data=localStorage.getItem('data');if(data){return JSON.parse(data);}else{return[];}};var _useState=useState(getDataFromLS()),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),name=_useState6[0],setName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),image=_useState8[0],setImage=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),id=_useState10[0],setId=_useState10[1];function getValue(value,name,image,id){setValue(value);setName(name);setImage(image);setId(id);}function handleClose(e){var mydata={value:value,name:name,image:image,id:id};setData([].concat(_toConsumableArray(data),[mydata]));setName('');setValue('');setImage('');setId('');}useEffect(function(){localStorage.setItem('data',JSON.stringify(data));},[data]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(Box,{className:\"header\",sx:{padding:\"50px 60px\",mb:\"10px\",borderRadius:\"15px\"},children:/*#__PURE__*/_jsx(Typography,{variant:\"small\",children:\"Crypto Coins\"})}),/*#__PURE__*/_jsx(Box,{children:cryptoData.map(function(item){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(CryptoBlock,{value:getValue,handleClose:handleClose,item:item},item.toString())});})})]})});}","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/pages/crypto-page/CryptoPage.js"],"names":["Container","Typography","Box","useEffect","useState","CryptoBlock","NavBar","cryptoData","CryptoPage","getDataFromLS","data","localStorage","getItem","JSON","parse","setData","value","setValue","name","setName","image","setImage","id","setId","getValue","handleClose","e","mydata","setItem","stringify","padding","mb","borderRadius","map","item","toString"],"mappings":"oOAAA,OAASA,SAAT,CAAoBC,UAApB,KAAsC,eAAtC,CACA,OAASC,GAAT,KAAoB,aAApB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,WAAP,KAAwB,6CAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kCAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAO,aAAP,C,6IAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CAEnC,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,IAAI,CAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb,CACA,GAAIF,IAAJ,CAAU,CACR,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP,CACD,CAFD,IAGK,CACH,MAAO,EAAP,CACD,CACF,CARD,CAUA,cAAwBN,QAAQ,CAACK,aAAa,EAAd,CAAhC,wCAAOC,IAAP,eAAaK,OAAb,eACA,eAA0BX,QAAQ,CAAC,EAAD,CAAlC,yCAAOY,KAAP,eAAcC,QAAd,eACA,eAAwBb,QAAQ,CAAC,EAAD,CAAhC,yCAAOc,IAAP,eAAaC,OAAb,eACA,eAA0Bf,QAAQ,CAAC,EAAD,CAAlC,yCAAOgB,KAAP,eAAcC,QAAd,eACA,eAAoBjB,QAAQ,CAAC,EAAD,CAA5B,0CAAOkB,EAAP,gBAAWC,KAAX,gBAEA,QAASC,CAAAA,QAAT,CAAkBR,KAAlB,CAAyBE,IAAzB,CAA+BE,KAA/B,CAAsCE,EAAtC,CAA0C,CACxCL,QAAQ,CAACD,KAAD,CAAR,CACAG,OAAO,CAACD,IAAD,CAAP,CACAG,QAAQ,CAACD,KAAD,CAAR,CACAG,KAAK,CAACD,EAAD,CAAL,CACD,CAED,QAASG,CAAAA,WAAT,CAAqBC,CAArB,CAAwB,CACtB,GAAIC,CAAAA,MAAM,CAAG,CACXX,KAAK,CAALA,KADW,CAEXE,IAAI,CAAJA,IAFW,CAGXE,KAAK,CAALA,KAHW,CAIXE,EAAE,CAAFA,EAJW,CAAb,CAMAP,OAAO,8BAAKL,IAAL,EAAc,CAACiB,MAAD,CAAd,EAAP,CACAR,OAAO,CAAC,EAAD,CAAP,CACAF,QAAQ,CAAC,EAAD,CAAR,CACAI,QAAQ,CAAC,EAAD,CAAR,CACAE,KAAK,CAAC,EAAD,CAAL,CACD,CAEDpB,SAAS,CAAC,UAAM,CACdQ,YAAY,CAACiB,OAAb,CAAqB,MAArB,CAA6Bf,IAAI,CAACgB,SAAL,CAAenB,IAAf,CAA7B,EACD,CAFQ,CAEN,CAACA,IAAD,CAFM,CAAT,CAIA,mBACE,sCACE,MAAC,SAAD,yBACE,KAAC,MAAD,IADF,cAEE,KAAC,GAAD,EAAK,SAAS,CAAC,QAAf,CAAwB,EAAE,CAAE,CAAEoB,OAAO,CAAE,WAAX,CAAwBC,EAAE,CAAE,MAA5B,CAAoCC,YAAY,CAAE,MAAlD,CAA5B,uBACE,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,0BADF,EAFF,cAOE,KAAC,GAAD,WAEIzB,UAAU,CAAC0B,GAAX,CAAe,SAACC,IAAD,qBACb,sCACE,KAAC,WAAD,EACE,KAAK,CAAEV,QADT,CAEE,WAAW,CAAEC,WAFf,CAGE,IAAI,CAAES,IAHR,EAIOA,IAAI,CAACC,QAAL,EAJP,CADF,EADa,EAAf,CAFJ,EAPF,GADF,EADF,CA0BD","sourcesContent":["import { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport CryptoBlock from \"../../myComponents/crypto-block/CryptoBlock\";\nimport NavBar from \"../../myComponents/navbar/Navbar\";\nimport cryptoData from \"../../data\";\nimport \"./style.css\"\n\nexport default function CryptoPage() {\n\n  const getDataFromLS = () => {\n    const data = localStorage.getItem('data');\n    if (data) {\n      return JSON.parse(data);\n    }\n    else {\n      return []\n    }\n  }\n\n  const [data, setData] = useState(getDataFromLS());\n  const [value, setValue] = useState('');\n  const [name, setName] = useState('');\n  const [image, setImage] = useState('');\n  const [id, setId] = useState('');\n\n  function getValue(value, name, image, id) {\n    setValue(value);\n    setName(name);\n    setImage(image);\n    setId(id);\n  }\n\n  function handleClose(e) {\n    let mydata = {\n      value,\n      name,\n      image,\n      id,\n    }\n    setData([...data, ...[mydata]]);\n    setName('');\n    setValue('');\n    setImage('');\n    setId('');\n  }\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data))\n  }, [data])\n\n  return (\n    <>\n      <Container>\n        <NavBar />\n        <Box className=\"header\" sx={{ padding: \"50px 60px\", mb: \"10px\", borderRadius: \"15px\" }}>\n          <Typography variant=\"small\">\n            Crypto Coins\n          </Typography>\n        </Box>\n        <Box>\n          {\n            cryptoData.map((item) => (\n              <>\n                <CryptoBlock\n                  value={getValue}\n                  handleClose={handleClose}\n                  item={item}\n                  key={item.toString()}\n                />\n              </>\n            ))\n          }\n        </Box>\n      </Container>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}