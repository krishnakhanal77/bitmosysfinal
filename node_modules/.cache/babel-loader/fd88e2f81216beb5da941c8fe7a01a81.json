{"ast":null,"code":"var _jsxFileName = \"/home/gsub/Desktop/bitmosys/src/pages/home-page/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { Button, CardMedia, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport cryptoData from \"../../data\";\nimport DialogBox from \"../../myComponents/dialog-box/DialogBox\";\nimport NavBar from \"../../myComponents/navbar/Navbar\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  var _cryptoData$id;\n\n  const navigate = useNavigate(); // const getDataFromLS = () => {\n  //   const data = JSON.parse(localStorage.getItem('data'));\n  //   return data || [];\n  // }\n\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  let total = data === null || data === void 0 ? void 0 : data.reduce((sum, item) => sum + Number(item.value), 0);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [value, setValue] = useState('');\n  const [indexNumber, setIndexNumber] = useState(\"\");\n  const [exchangeImage, setExchangeImage] = useState(\"\");\n  const [exchangeName, setExchangeName] = useState(\"\");\n  const [exchangeIndex, setExchangeIndex] = useState(\"\");\n  const showExchangeIndex = exchangeIndex + 2;\n  const showExchangeName = exchangeName;\n  const showExchangeImage = exchangeImage;\n  const exchangeValue = value - indexNumber;\n  const showExchangeValue = Math.abs(exchangeValue);\n  const cryptoName = name;\n  const cryptoId = id;\n  const cryptoValue = value;\n  const cryptoImage = (_cryptoData$id = cryptoData[id]) === null || _cryptoData$id === void 0 ? void 0 : _cryptoData$id.image;\n\n  const getDropdownData = (name, value) => {\n    setName(name);\n    setId(value);\n  };\n\n  const getInputData = value => {\n    setValue(value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const removeDataIfZero = () => {\n    let newShowArray = data.filter(function (showArray) {\n      return showArray.value != \"0\";\n    });\n    localStorage.setItem('data', JSON.stringify(newShowArray));\n    window.location.reload();\n  };\n\n  const handleRemove = id => {\n    data.splice(id, 1);\n    localStorage.setItem('data', JSON.stringify(data));\n    navigate(\"/\");\n  };\n\n  const showExchangedData = {\n    \"id\": cryptoId,\n    \"name\": showExchangeName,\n    \"value\": showExchangeValue,\n    \"image\": showExchangeImage\n  };\n\n  const handleShowManageExchange = () => {\n    let newShowData = data;\n    newShowData.unshift(showExchangedData);\n    localStorage.setItem('data', JSON.stringify(newShowData));\n    navigate(\"/\");\n  };\n\n  const removePreviousData = () => {\n    data.splice(showExchangeIndex, 1);\n    localStorage.setItem('data', JSON.stringify(data));\n    navigate(\"/\");\n  };\n\n  const getExchangedData = {\n    \"name\": cryptoName,\n    \"value\": cryptoValue,\n    \"image\": cryptoImage\n  };\n\n  const handleSubmit = () => {\n    let newData = data;\n    newData.unshift(getExchangedData);\n    localStorage.setItem('data', JSON.stringify(newData));\n    navigate(\"/\");\n  };\n\n  const handleManageExchange = (indexNumber, exchangeImage, exchangeName, index) => {\n    setIndexNumber(indexNumber);\n    setExchangeImage(exchangeImage);\n    setExchangeName(exchangeName);\n    setExchangeIndex(index);\n  };\n\n  useEffect(() => {\n    setData(JSON.parse(localStorage.getItem('data')));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"header\",\n      sx: {\n        padding: \"45px 60px\",\n        mb: \"10px\",\n        borderRadius: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"small\",\n          children: \"Number Of Crypto Coins Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"small\",\n          children: (data === null || data === void 0 ? void 0 : data.length) || {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"small\",\n          children: \"Number Of Crypto Coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 75\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"small\",\n          children: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), (data === null || data === void 0 ? void 0 : data.length) ? /*#__PURE__*/_jsxDEV(Box, {\n      children: data === null || data === void 0 ? void 0 : data.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n        className: \"content\",\n        sx: {\n          padding: \"15px\",\n          mb: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            padding: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              width: \"50px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              sx: {\n                pr: \"10px\"\n              },\n              component: \"img\",\n              height: \"30\",\n              width: \"30\",\n              image: item.image,\n              alt: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                pt: \"5px\"\n              },\n              variant: \"small\",\n              children: [item.name, \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              pt: \"5px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"small\",\n              children: item.value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                handleClickOpen();\n                handleManageExchange(item.value, item.image, item.name, index);\n              },\n              sx: {\n                mr: \"10px\",\n                BackgroundColor: \"red\"\n              },\n              variant: \"contained\",\n              children: \"exchange\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleRemove(index),\n              variant: \"contained\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      className: \"content\",\n      sx: {\n        padding: \"15px\",\n        mb: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          padding: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"small\",\n          children: \"Opps! No Crypto Coins found ):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => navigate('/crypto-page'),\n          children: \"Buy Crypto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(DialogBox, {\n        indexValue: indexNumber,\n        exchangeName: exchangeName,\n        handleClickOpen: handleClickOpen,\n        handleClose: handleClose,\n        handleSubmit: handleSubmit,\n        getDropdownData: getDropdownData,\n        getInputData: getInputData,\n        handleShowManageExchange: handleShowManageExchange,\n        removePreviousData: removePreviousData,\n        removeDataIfZero: removeDataIfZero,\n        value: name,\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"ZWFKXNN5DXkxBSfoXwxvfOVVL6s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/pages/home-page/HomePage.js"],"names":["Button","CardMedia","Container","Typography","Box","useEffect","useState","useNavigate","cryptoData","DialogBox","NavBar","HomePage","navigate","data","setData","open","setOpen","total","reduce","sum","item","Number","value","id","setId","name","setName","setValue","indexNumber","setIndexNumber","exchangeImage","setExchangeImage","exchangeName","setExchangeName","exchangeIndex","setExchangeIndex","showExchangeIndex","showExchangeName","showExchangeImage","exchangeValue","showExchangeValue","Math","abs","cryptoName","cryptoId","cryptoValue","cryptoImage","image","getDropdownData","getInputData","handleClickOpen","handleClose","removeDataIfZero","newShowArray","filter","showArray","localStorage","setItem","JSON","stringify","window","location","reload","handleRemove","splice","showExchangedData","handleShowManageExchange","newShowData","unshift","removePreviousData","getExchangedData","handleSubmit","newData","handleManageExchange","index","parse","getItem","padding","mb","borderRadius","length","map","display","justifyContent","width","pr","pt","mr","BackgroundColor"],"mappings":"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","sourcesContent":["import { Button, CardMedia, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport cryptoData from \"../../data\";\nimport DialogBox from \"../../myComponents/dialog-box/DialogBox\";\nimport NavBar from \"../../myComponents/navbar/Navbar\";\nimport \"./style.css\"\n\nexport default function HomePage() {\n  const navigate = useNavigate();\n\n  // const getDataFromLS = () => {\n  //   const data = JSON.parse(localStorage.getItem('data'));\n  //   return data || [];\n  // }\n\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  let total = data?.reduce((sum, item) => sum + Number(item.value), 0);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [value, setValue] = useState('');\n  const [indexNumber, setIndexNumber] = useState(\"\");\n  const [exchangeImage, setExchangeImage] = useState(\"\")\n  const [exchangeName, setExchangeName] = useState(\"\")\n  const [exchangeIndex, setExchangeIndex] = useState(\"\")\n  const showExchangeIndex = exchangeIndex + 2;\n  const showExchangeName = exchangeName;\n  const showExchangeImage = exchangeImage;\n  const exchangeValue = value - indexNumber;\n  const showExchangeValue = Math.abs(exchangeValue);\n  const cryptoName = name;\n  const cryptoId = id;\n  const cryptoValue = value;\n  const cryptoImage = cryptoData[id]?.image;\n\n  const getDropdownData = (name, value) => {\n    setName(name);\n    setId(value);\n  }\n\n  const getInputData = (value) => {\n    setValue(value)\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const removeDataIfZero = () => {\n    let newShowArray = data.filter(function (showArray) {\n      return showArray.value != \"0\";\n    });\n    localStorage.setItem('data', JSON.stringify(newShowArray));\n    window.location.reload();\n  }\n\n  const handleRemove = (id) => {\n    data.splice(id, 1)\n    localStorage.setItem('data', JSON.stringify(data))\n    navigate(\"/\")\n  }\n\n  const showExchangedData = {\n    \"id\": cryptoId,\n    \"name\": showExchangeName,\n    \"value\": showExchangeValue,\n    \"image\": showExchangeImage\n  }\n\n  const handleShowManageExchange = () => {\n    let newShowData = data;\n    newShowData.unshift(showExchangedData)\n    localStorage.setItem('data', JSON.stringify(newShowData))\n    navigate(\"/\")\n  }\n\n  const removePreviousData = () => {\n    data.splice(showExchangeIndex, 1)\n    localStorage.setItem('data', JSON.stringify(data))\n    navigate(\"/\")\n  }\n\n  const getExchangedData = {\n    \"name\": cryptoName,\n    \"value\": cryptoValue,\n    \"image\": cryptoImage\n  }\n\n  const handleSubmit = () => {\n    let newData = data;\n    newData.unshift(getExchangedData)\n    localStorage.setItem('data', JSON.stringify(newData))\n    navigate(\"/\")\n  }\n\n  const handleManageExchange = (indexNumber, exchangeImage, exchangeName, index) => {\n    setIndexNumber(indexNumber);\n    setExchangeImage(exchangeImage);\n    setExchangeName(exchangeName);\n    setExchangeIndex(index);\n  }\n\n  useEffect(() => {\n    setData(JSON.parse(localStorage.getItem('data')));\n  }, [])\n\n  return (\n    <Container>\n      <NavBar />\n      <Box className=\"header\" sx={{ padding: \"45px 60px\", mb: \"10px\", borderRadius: \"15px\" }}>\n        <Box>\n          <Typography variant='small'>Number Of Crypto Coins Types</Typography> <br />\n          <Typography variant='small'>{data?.length || {}}</Typography>\n        </Box>\n\n        <Box>\n          <Typography variant='small'>Number Of Crypto Coins</Typography> <br />\n          <Typography variant='small'>\n            {total}\n          </Typography> <br />\n        </Box>\n      </Box>\n      {\n        data?.length ?\n          <Box>\n            {\n              data?.map((item, index) => (\n                <Box key={index} className=\"content\" sx={{ padding: \"15px\", mb: \"10px\" }}>\n                  <Box sx={{ display: \"flex\", justifyContent: \"space-between\", padding: \"15px\" }}>\n                    <Box sx={{ display: \"flex\", width: \"50px\" }}>\n                      <CardMedia\n                        sx={{ pr: \"10px\" }}\n                        component=\"img\"\n                        height=\"30\"\n                        width=\"30\"\n                        image={item.image}\n                        alt={item.name}\n                      />\n                      <Typography sx={{ pt: \"5px\" }} key={index} variant=\"small\">{item.name} </Typography>\n                    </Box>\n                    <Box sx={{ pt: \"5px\" }}>\n                      <Typography key={index} variant=\"small\">\n                        {item.value}\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Button onClick={() => {\n                        handleClickOpen();\n                        handleManageExchange(item.value, item.image, item.name, index);\n                      }} key={index} sx={{ mr: \"10px\", BackgroundColor: \"red\" }} variant=\"contained\" >exchange</Button>\n                      <Button\n                        onClick={() => handleRemove(index)}\n                        variant=\"contained\"\n                      >\n                        Remove\n                      </Button>\n                    </Box>\n                  </Box>\n                </Box>\n              ))\n            }\n          </Box>\n          :\n          <Box className=\"content\" sx={{ padding: \"15px\", mb: \"10px\" }}>\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\", padding: \"15px\" }}>\n              <Typography variant=\"small\">Opps! No Crypto Coins found ):</Typography>\n              <Button variant=\"contained\" onClick={() => navigate('/crypto-page')}>Buy Crypto</Button>\n            </Box>\n          </Box>\n      }\n      <Box>\n        <DialogBox\n          indexValue={indexNumber}\n          exchangeName={exchangeName}\n          handleClickOpen={handleClickOpen}\n          handleClose={handleClose}\n          handleSubmit={handleSubmit}\n          getDropdownData={getDropdownData}\n          getInputData={getInputData}\n          handleShowManageExchange={handleShowManageExchange}\n          removePreviousData={removePreviousData}\n          removeDataIfZero={removeDataIfZero}\n          value={name}\n          open={open}\n        />\n      </Box>\n    </Container>\n  )\n}"]},"metadata":{},"sourceType":"module"}