{"ast":null,"code":"var _jsxFileName = \"/home/gsub/Desktop/bitmosys/src/myComponents/drop-zone/CustomSelect.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport Select, { components } from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomSelect(_ref) {\n  _s();\n\n  let {\n    onChange,\n    ...props\n  } = _ref;\n  const [selectedOption, setSelectedOption] = useState(props.isMulti ? [] : null);\n  const {\n    ValueContainer,\n    Placeholder\n  } = components;\n\n  const CustomValueContainer = _ref2 => {\n    let {\n      children,\n      ...props\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(ValueContainer, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(Placeholder, { ...props,\n        isFocused: props.isFocused,\n        children: props.selectProps.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), React.Children.map(children, child => child && child.type !== Placeholder ? child : null)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    var _props$defaultValue;\n\n    let executeHandleChangeForDefaultValue = props.isMulti ? !!((_props$defaultValue = props.defaultValue) === null || _props$defaultValue === void 0 ? void 0 : _props$defaultValue.length) : props.defaultValue;\n    executeHandleChangeForDefaultValue ? handleSelectChange(findSelectedOptionObject(props.defaultValue)) : setSelectedOption(null);\n  }, [`${props.isMulti ? Array.from(props.defaultValue || []) : props.defaultValue}`]);\n  useEffect(() => {\n    props.clearSelect && handleSelectChange(null);\n  }, [props.clearSelect]);\n\n  const findSelectedOptionObject = value => {\n    if (props.isMulti) {\n      if (!props.hasMultiLevelObject) {\n        return value.map(item => props.options.find(obj => obj.value === item) || {\n          value: item,\n          label: item\n        });\n      }\n\n      let valueContainingArray = [];\n      value.map(item => props.options.map(object => object.options.find(obj => obj.value === item && valueContainingArray.push(obj))));\n      return valueContainingArray;\n    }\n\n    if (!props.hasMultiLevelObject) {\n      return props.options.find(obj => obj.value === value) || {\n        value: value,\n        label: value\n      };\n    }\n\n    for (let i in props.options) {\n      for (let j in props.options[i].options) {\n        if (props.options[i].options[j].value === value) {\n          return props.options[i].options[j];\n        }\n      }\n    }\n  };\n\n  const handleSelectChange = options => {\n    let value = props.isMulti ? Boolean(options === null || options === void 0 ? void 0 : options.length) ? options.map(item => item.value) : null : options === null || options === void 0 ? void 0 : options.value;\n    setSelectedOption(props.isMulti ? options || [] : options);\n    onChange(props.name, value, options);\n  };\n\n  const styles = {\n    valueContainer: (base, state) => ({ ...base,\n      overflow: \"visible\"\n    }),\n    placeholder: (base, state) => ({ ...base,\n      position: \"absolute\",\n      top: state.hasValue || state.selectProps.inputValue ? -14 : \"5px\",\n      transition: \"top 0.2s, font-size 0.1s\",\n      fontSize: (state.hasValue || state.selectProps.inputValue) && 12\n    })\n  };\n  return props.creatable ? /*#__PURE__*/_jsxDEV(CreatableSelect, {\n    placeholder: props.label,\n    name: props.name,\n    options: props.options,\n    className: props.className,\n    classNamePrefix: props.classNamePrefix,\n    value: selectedOption,\n    onChange: handleSelectChange,\n    components: {\n      ValueContainer: CustomValueContainer\n    },\n    isClearable: props.isClearable,\n    styles: styles,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Select, {\n    placeholder: props.label,\n    name: props.name,\n    options: props.options,\n    className: props.className,\n    classNamePrefix: props.classNamePrefix,\n    value: selectedOption,\n    onChange: handleSelectChange,\n    components: {\n      ValueContainer: CustomValueContainer\n    },\n    isClearable: props.isClearable,\n    styles: styles,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CustomSelect, \"XokVVIFlXtYDTa9mAiD7R2Ay4xM=\");\n\n_c = CustomSelect;\nCustomSelect.propTypes = {\n  className: PropTypes.string,\n  classNamePrefix: PropTypes.string,\n  isClearable: PropTypes.bool\n};\nCustomSelect.defaultProps = {\n  className: \"select-sm\",\n  classNamePrefix: \"react-select\",\n  isClearable: true\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"sources":["/home/gsub/Desktop/bitmosys/src/myComponents/drop-zone/CustomSelect.js"],"names":["PropTypes","React","useEffect","useState","Select","components","CreatableSelect","CustomSelect","onChange","props","selectedOption","setSelectedOption","isMulti","ValueContainer","Placeholder","CustomValueContainer","children","isFocused","selectProps","placeholder","Children","map","child","type","executeHandleChangeForDefaultValue","defaultValue","length","handleSelectChange","findSelectedOptionObject","Array","from","clearSelect","value","hasMultiLevelObject","item","options","find","obj","label","valueContainingArray","object","push","i","j","Boolean","name","styles","valueContainer","base","state","overflow","position","top","hasValue","inputValue","transition","fontSize","creatable","className","classNamePrefix","isClearable","propTypes","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport Select, { components } from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\n\nexport default function CustomSelect({ onChange, ...props }) {\n  const [selectedOption, setSelectedOption] = useState(props.isMulti ? [] : null);\n  const { ValueContainer, Placeholder } = components;\n  const CustomValueContainer = ({ children, ...props }) => {\n    return (\n      <ValueContainer {...props}>\n        <Placeholder {...props} isFocused={props.isFocused}>\n          {props.selectProps.placeholder}\n        </Placeholder>\n        {\n          React.Children.map(children, child =>\n            child && child.type !== Placeholder ? child : null\n          )\n        }\n      </ValueContainer>\n    );\n  };\n\n  useEffect(() => {\n    let executeHandleChangeForDefaultValue = props.isMulti ? !!(props.defaultValue?.length) : props.defaultValue;\n    executeHandleChangeForDefaultValue ? handleSelectChange(findSelectedOptionObject(props.defaultValue)) : setSelectedOption(null);\n  }, [`${props.isMulti ? Array.from(props.defaultValue || []) : props.defaultValue}`]);\n\n  useEffect(() => {\n    props.clearSelect && handleSelectChange(null);\n  }, [props.clearSelect]);\n\n  const findSelectedOptionObject = (value) => {\n    if (props.isMulti) {\n      if (!props.hasMultiLevelObject) {\n        return (\n          value.map(item => (props.options.find(obj => (obj.value === item))) || ({ value: item, label: item }))\n        )\n      }\n      let valueContainingArray = [];\n      value.map(item => props.options.map(object => object.options.find(obj => (obj.value === item) && valueContainingArray.push(obj))));\n      return valueContainingArray;\n    }\n    if (!props.hasMultiLevelObject) {\n      return props.options.find(obj => obj.value === value) || ({ value: value, label: value });\n    }\n    for (let i in props.options) {\n      for (let j in props.options[i].options) {\n        if (props.options[i].options[j].value === value) {\n          return props.options[i].options[j];\n        }\n      }\n    }\n  }\n\n  const handleSelectChange = (options) => {\n    let value = props.isMulti ? (Boolean(options?.length) ? options.map(item => item.value) : null) : options?.value;\n    setSelectedOption(props.isMulti ? (options || []) : options);\n    onChange(props.name, value, options);\n  }\n\n  const styles = {\n    valueContainer: (base, state) => ({\n      ...base,\n      overflow: \"visible\"\n    }),\n    placeholder: (base, state) => ({\n      ...base,\n      position: \"absolute\",\n      top: state.hasValue || state.selectProps.inputValue ? -14 : \"5px\",\n      transition: \"top 0.2s, font-size 0.1s\",\n      fontSize: (state.hasValue || state.selectProps.inputValue) && 12\n    })\n  }\n\n  return (\n    props.creatable ? (\n      <CreatableSelect\n        placeholder={props.label}\n        name={props.name}\n        options={props.options}\n        className={props.className}\n        classNamePrefix={props.classNamePrefix}\n        value={selectedOption}\n        onChange={handleSelectChange}\n        components={{\n          ValueContainer: CustomValueContainer,\n        }}\n        isClearable={props.isClearable}\n        styles={styles}\n        {...props}\n      />\n    ) : (\n      <Select\n        placeholder={props.label}\n        name={props.name}\n        options={props.options}\n        className={props.className}\n        classNamePrefix={props.classNamePrefix}\n        value={selectedOption}\n        onChange={handleSelectChange}\n        components={{\n          ValueContainer: CustomValueContainer,\n        }}\n        isClearable={props.isClearable}\n        styles={styles}\n        {...props}\n      />\n    )\n  );\n}\n\nCustomSelect.propTypes = {\n  className: PropTypes.string,\n  classNamePrefix: PropTypes.string,\n  isClearable: PropTypes.bool,\n};\n\nCustomSelect.defaultProps = {\n  className: \"select-sm\",\n  classNamePrefix: \"react-select\",\n  isClearable: true,\n}\n"]},"metadata":{},"sourceType":"module"}